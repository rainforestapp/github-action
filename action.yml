name: Rainforest QA GitHub Action
description: Easily trigger a Rainforest Run from your GitHub workflows
inputs:
  #
  # Rainforest API parameters
  #
  description:
    description: An arbitrary string to associate with the run
    required: false
    default: ''

  run_group_id:
    description: Only run tests tied to this Run Group
    required: true

  environment_id:
    description: Use a specific environment for this run
    required: false
    default: ''

  custom_url:
    description: Use a specific URL for this run
    required: false
    default: ''

  conflict:
    description: How other currently in-progress runs should be handled. Values are `cancel` to cancel runs in the same environment as your new run and `cancel-all` to cancel all runs
    required: false
    default: ''

  execution_method:
    description: The execution method to use for this run
    required: false
    default: ''

  crowd:
    description: "DEPRECATED: Use `execution_method` instead"
    required: false
    default: ''
    deprecationMessage: "Use `execution_method` instead. For more information, see https://github.com/rainforestapp/github-action/releases/tag/v2.1.0."

  release:
    description: Manually entered release information about the release the run is associated with
    required: false
    default: ''

  automation_max_retries:
    description: If set to a value > 0 and a test fails, it will be retried within the same run, up to that number of times
    required: false
    default: ''

  branch:
    description: Use a specific Rainforest branch for this run
    required: false
    default: ''

  token:
    description: Your Rainforest QA API token
    required: true

  #
  # Rainforest CLI flags
  #
  background:
    description: Do not wait for a run to complete before exiting
    required: false
    default: ''

  #
  # GitHub Action-specific inputs
  #
  dry_run:
    description: Set to true to run parameter validations without starting a new Rainforest run
    required: false
    default: ''

  cache_key:
    description: The cache key to use for saving/restoring a Rainforest run ID (used to rerun failed tests)
    required: false
    default: '${{ github.job }}-${{ github.action }}'

outputs:
  command:
    description: The CLI command that was run
    value: ${{ steps.validate.outputs.command }}
  error:
    description: The validation error that was raised
    value: ${{ steps.validate.outputs.error }}

runs:
  using: composite
  steps:
    - name: Set Action Version
      shell: bash
      run: |
        echo "RF_ACTION_VERSION=3.2.6" >> $GITHUB_ENV
    - name: Check for reruns
      uses: actions/cache@v4
      if: (! inputs.dry_run)
      with:
        save-always: true
        key: rainforest-run-${{ github.run_id }}-${{ inputs.cache_key }}-${{ github.run_attempt }}
        path: .rainforest_run_id
        restore-keys: |
          rainforest-run-${{ github.run_id }}-${{ inputs.cache_key }}-

    - name: Validate Parameters
      shell: bash
      id: validate
      env:
        RF_DESCRIPTION: ${{ inputs.description }}
        RF_RUN_GROUP_ID: ${{ inputs.run_group_id }}
        RF_ENVIRONMENT_ID: ${{ inputs.environment_id }}
        RF_CUSTOM_URL: ${{ inputs.custom_url }}
        RF_CONFLICT: ${{ inputs.conflict }}
        RF_EXECUTION_METHOD: ${{ inputs.execution_method }}
        RF_CROWD: ${{ inputs.crowd }}
        RF_RELEASE: ${{ inputs.release }}
        RF_AUTOMATION_MAX_RETRIES: ${{ inputs.automation_max_retries }}
        RF_BRANCH: ${{ inputs.branch }}
        RF_TOKEN: ${{ inputs.token }}
        RF_BACKGROUND: ${{ inputs.background }}
        RF_DRY_RUN: ${{ inputs.dry_run }}
        RF_CACHE_KEY: ${{ inputs.cache_key }}
      run: ${GITHUB_ACTION_PATH}/steps/validate.sh

    - name: Run Rainforest
      uses: docker://gcr.io/rf-public-images/rainforest-cli:latest
      if: (! inputs.dry_run)
      env:
        GH_ACTION_VERSION: ${{ env.RF_ACTION_VERSION }}
      with:
        args: ${{ steps.validate.outputs.command }}
    - name: Archive Rainforest results
      uses: actions/upload-artifact@v4
      if: (! inputs.dry_run) && steps.validate.outputs.command && always()
      with:
        name: Test Results
        path: results/rainforest/junit.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: (! inputs.dry_run) && steps.validate.outputs.command && always()
      with:
        check_name: Rainforest Results
        report_paths: results/rainforest/junit.xml
